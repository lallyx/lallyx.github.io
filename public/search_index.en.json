[{"url":"http://127.0.0.1:1111/devlog/","title":"Devlog","body":"The meat, the juice, the core of this skinny website.\nTake it all in, see the progress made and have a laugh, maybe, with me.\n"},{"url":"http://127.0.0.1:1111/devlog/starting-point/","title":"Progress before the logs","body":"Tooling\nLet's start from the tooling and resources chosen for the project.\nThe following is intended to give a sense of what I've selected and used so far.\nFuture entries will detail additional tools and discoveries.\nMaybe at some point I can compile a comprehensive list, but for the time being this is pretty much everything I'm using.\nGame engine\nGodot4 - open source, touted to be easy and configurable and perfect for 2D games.\nNo unity bloat, no hidden fees.\nI dabbled a bit with Pico8 as well, but I want to end up having something more polished and commercially viable by the end of this, so it seemed the next best step up without going down a bigger rabbit hole.\nI will get back to Pico8 at some point as I really enjoyed working with it and the retro feel that comes with it.\nAI Assistant (just for the code)\nour trusted advisor will be chatGPT, with a splash of Claude if we can't come to an agreement.\nI will use these boys mostly for prototyping and code validation, so that I know I'm on the right path and to get inspired on how to build functionalities that I don't have the knowledge to understand yet.\nGraphics\nI picked up a few free packages from itch.io. I really wanted to do it all myself to begin with, but that would have prevented any real progress for too long.\nI plan to upgrade the resources taken and modify them as a I go, to give them my personal touch and to learn from how they were originally created. Also, most free resources don't come with all angles and perspectives, so I've already done quite a few modifications.\nPixel-art making\nI bit the bullet and bought Aseprite.\nI wanted to be cheap (not that it's that expensive anyway), but I figured that if I want to do this properly I should invest a bit in it.\nI've used to edit quite a few sprites already and it's straightforward enough.\nI haven't used any advanced features beyond layers to check animation timelines, but I'm planning to explore some pluging to see where those can take my lack of knowledge.\nTutorials\nI'm following this channel which I find extremely informative, direct to the point and well laid out.\nThe programming patterns used are very viable for production-ready code (at least when compared to my web deb experience) and the methods used are easily transferable to any game mechanic I want to implement.\nSo far - I just got to the inventory building - I can see how his approach can be transfered to any other game.\nProps to you, Michael!\nYeah, but what have you actually built so far?\nPlayer\nMy first hero character - a dragon, lizard, crocodile friend.\nHe can:\n\nmove\naim in the direction he's facing (and look at the mouse, I have the function ready)\nperform a 'shouting' attack in front of him\ndeal damage\ntake damage\nanimate in all faced directions\nidle like a boss\n\nAll powered by an extendable state machine.\n\n\nFront animation, with front view created from 0\n\n\n\nTaken from free resources and tweaked\n\n\n\nAttack 'shout' animation, on all sides\n\nEnemies\nMy first enemy character - a derpy snail\nHe can:\n\nMove randomly, with its own state machine\nHurt when collided with\nAnimate in all directions\nLook at you from behind\n\n\n\nRoam, my fiends\n\nScene transitions and a map to explore\nA few level scenes staged with a free tileset I plan to adopt throughout most of the game.\nit's quite comprehensive and includes a lot of fitting assets that would be easy to further tweak.\nBonus points because I love the palette.\nI've also implemented the scene transition logic, which can pretty much be reused throughout the whole game moving forward.\n\n\nShow me the way, my friend\n\nLoad / Save\nVery basic, json file with scene location and health amount.\nCan be easily expanded and doesn't require much maintenance.\nNot even comparable to a full backend implementation or needing a DB to query.\n\n\nWhere was I?\n\nOverworld concept\nI'm really pleased with this one, as it was \"vibe coded\" with chatGPT and the results are really solid.\nI've got a reusable logic that only requires to manually position the locations, select which directions are allowed and draw the path to follow.\nEverything else is handled automatically, the animations swap based on the turn angle and it's basically endlessly extendable.\nOnce I know how to plug it and what do with it I'll add events to unlock/show new locations and then different markers for each of them.\nReally, really happy about this one.\n\n\nWhere was I?\n\nYeah, I know it's a different tileset.\nI wanted to quickly prototype something that would still look good, so I bought it for like 2$ or something and went with it.\n"},{"url":"http://127.0.0.1:1111/","title":"Home","body":"\n\t\n\n\n\nWho am I and what am I doing here\nI'm a thirty-something dad who's been working in tech for far too long before diving into game development.\nI have a technical background in web development and I'm tired of looking at websites for a living (which makes building a blog for this project even more hilarious).\nI've been playing games my whole life and I've been toying with the ideas of building mine for a very long time, installing all game engines and stacks without ever committing to anything concrete.\nI decided to start a blog to keep track of my progress and to keep me motivated, so here we go!\nI want to try and publish at least a weekly update, but I would really like to make it daily, which would force me do something on a daily basis and then craft an update for the world to see (or at least a long forgotten friend somewhere back home).\nThe project was supposed to be something simple, but every time I get down to develop it, random ideas start flowing, I get excited and then I crumble when facing the steps required to implement anything I'd want to do.\nHowever, here's to stopping this nonsense and to motivate myself to do less (and less perfect), but at least getting it done and putting it out there.\nMy ultimate goal with this blog is to motivate myself, as well as to inspire my past-self and anybody who may be facing the same struggles.\nIf this will go anywhere and if I will get to the end of the project (or at least to publish a watered down version of it), it will serve as a living proof that anybody can do it, provided some time commitment and willingness to push through.\nIf you're reading and you're wondering whether you have time or not to do any of this (myself included):\n\nIt's 11PM on a Tuesday.\nI went to put my 2 year old daughter to bed at 7.30 and she fell asleep at 9.\nI started learning Zola and this template at 9 in order to start publishing this blog.\nI will probably spend no more than 1-2 hours a day (if I stick to it), to both learning and developing.\n\nIf I can make it with these constraints, anybody in a similar situation can and, even better, anybody with fewer restrictions can do much better than me.\nThe sky's the limit - let's go!\n"},{"url":"http://127.0.0.1:1111/the-game/","title":"The game","body":"I love 2d games, pixel-art and everything revolving around these two.\nI've grown up with a gameboy stuck in my hands 24/7, so the initial objective was to develop for it.\nHowever, the inherent complexities have put me off for the time being, so I opted to use more modern open-source techonologies to get my feet wet, learn architecture, mindset and workflows and then moving back to the original desire.\nTo do so, I decided to use Godot and to build a top-down action game.\nI like too many genres to make them all fit, but I want to be able to include a bit of everything in order to pride myself of having built something like my favourites and also to make something I would want to play.\nIdeally I'd love my first game to be a big hit and to be jam-packed with features and incredibly fun loops, but realistically I just want to be able to hit publish on Steam and get somebody to at least acknowledge the effort put in.\nWhat I want it to have:\n\nAn overworld map: because all good games have one. Super Mario World style.\nCute, easily readable characters: clean pixel art that pops, with vibrant colours\nSome kind of farming: I love planting digital seeds and watch them grow\nUpgrade mechanics: here's nothing more I love to see in game than progress through an upgradable base with buildings and roaming friends\nSailing: side-scrolling boats, waves and pixel water.\nDungeons, dungeons, dungeons: hand-crafted, no procedural generation. Not too many, but well made.\n\n\nMy game dev knowledge\nNothing more than a few random tutorials, long buried in distant memories\n\nMy pixel-art knowledge\nNothing more than looking at pokemon sprites in awe and a dream\n\nMy chip-tune composing knowledge\nNothing more than pressing buttons on a keyboard and banging a fork on a glass\n\n\n\t\n\n\n"}]